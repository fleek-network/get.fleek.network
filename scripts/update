#!/bin/bash

# Defaults
defaultName="lightning"
defaultCLIBuildName="$defaultName-node"
defaultDockerRegistryUrl="ghcr.io/fleek-network/lightning"
defaultDockerRegistryTag="latest"
defaultCLIAlias="lgtn"
defaultAlphaTestnetBranch="testnet-alpha-1"
defaultLightningPath="$HOME/fleek-network/$defaultName"
defaultDiscordUrl="https://discord.gg/fleek"
defaultLightningDiagnosticFilename="diagnostic.log"
defaultLightningOutputFilename="output.log"
defaultLightningLogPath="/var/log/$defaultName"
defaultLightningDiagnosticLogAbsPath="$defaultLightningLogPath/$defaultLightningDiagnosticFilename"
defaultLightningOutputLogAbsPath="$defaultLightningLogPath/$defaultLightningOutputFilename"
defaultTargetName="release"
defaultLightningSystemdServiceName="$defaultName"
defaultLightningSystemdServiceNameForDocker="docker-$defaultName"
defaultLightningSystemdServicePath="/etc/systemd/system/$defaultLightningSystemdServiceName.service"
defaultLightningSystemdServicePathForDocker="/etc/systemd/system/$defaultLightningSystemdServiceNameForDocker.service"
defaultLightningBasePath="$HOME/.$defaultName"
defaultLightningConfigFilename="config.toml"
defaultLightningConfigPath="$defaultLightningBasePath/$defaultLightningConfigFilename"
defaultTempLogFilePath="/var/tmp"
defaultMinRustVersion="1.75.0"

# Utils
isRustVersionGtMinReq() {
 head=$(printf "$defaultMinRustVersion\n$1\n" | sort -rV | head -n1)

 if [[ "$head" == "$defaultMinRustVersion" ]]; then
   return 1
 fi

 return 0
}

(
  exec < /dev/tty;

  if [[ -f "$defaultLightningSystemdServicePathForDocker" ]] && grep -q 'docker run' "$defaultLightningSystemdServicePathForDocker"; then
    if ! sudo docker pull $defaultDockerRegistryUrl:$defaultDockerRegistryTag; then
      echo "üëπ Oops! Failed to pull the latest docker image for some reason"

      exit 1
    fi

    echo
    echo "‚ö†Ô∏è  Attention: Docker users, don't have to run the update script to get latest updates. Docker users when run systemctl restart get the latest version."
    echo
    echo "üåà The update has now completed."
    echo
    echo "ü§ñ Restart the Network Node by running the restart command:"
    echo "sudo systemctl restart $defaultLightningSystemdServiceNameForDocker"
    echo
    echo "üëÄ You can watch the Node output by running the command:"
    echo "tail -f $defaultLightningOutputLogAbsPath"
    echo
    echo "ü•º For diagnostics run the command:"
    echo "tail -f $defaultLightningDiagnosticLogAbsPath"
    echo
    echo "Learn more by checking our guides at https://docs.fleek.network"
    echo "‚ú® That's all!"

    exit
  fi

  while read -rp "ü§ñ Are you logged with the user account used to install the Fleek Network Lightning CLI? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      printf "üëπ Oops! You should be logged in with the user account used to install the fleek Network Lightning CLI, switch the account and try again!\n"

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  if ! sudo systemctl stop "$defaultLightningSystemdServiceName"; then
    echo "‚ö†Ô∏è WARNING: Failed to stop the Fleek Network Lightning Service"
  else
    echo "‚úÖ Stopped the Fleek Network Lightning Service"
  fi

  if ! source "$HOME/.cargo/env"; then
    printf "üí© Uh-oh! Are you sure you're logged in with the user account used to install the Lightning CLI?\n"

    exit 1
  fi

  if ! command -v "cargo" &> /dev/null; then
    echo "üëπ Oops! The rust toolchain was not found, check the reference documentation to update the Lightning CLI manually https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
    echo

    exit 1
  fi

  if ! isRustVersionGtMinReq "$(cargo version | cut -d " " -f 2)"; then
    echo "ü§ñ Rust is going to be updated..."

    if ! rustup update; then
      echo "üëπ Oops! Failed to update rust for some reason..."

      exit 1
    fi
  fi

  if [[ ! -d "$defaultLightningPath" ]]; then
    defaultLightningPath="$(find . -type f -wholename "*core/node/Cargo.toml" -exec dirname "{}" \; |sort -zu |sed -z 's/$/\n/')"

    if [[ ! -d "$defaultLightningPath" ]]; then
      while read -rp "‚ö†Ô∏è  Oh-no! Failed to locate the Fleek Network Lightning repository source code. What is the local repository source code path? " answer; do
        if [[ -f "$answer/core/application/Cargo.toml" ]]; then
          break;
        else
          printf "üí© Uh-oh! That doesn't seem to be correct. Try again...\n"
        fi
      done
    fi

    echo "ü§ñ The Fleek Network Lightning source code was found at $defaultLightningPath"
    echo
  fi

  if ! cd "$defaultLightningPath"; then
    printf "üëπ Oops! Failed to change directory to %s\n" "$defaultLightningPath"

    exit 1
  fi

  if ! git rev-parse --abbrev-ref HEAD | grep -q "$defaultAlphaTestnetBranch"; then
    if ! git checkout "$defaultAlphaTestnetBranch"; then
      echo "Failed to checkout to branch $defaultAlphaTestnetBranch"
    fi
  fi

  echo

  echo "‚ö†Ô∏è WARNING: This process will clear any changes made in the local source code repository by resetting it to be in sync with the remote origin, you'll lose any changes made in the local repository."
  echo "This shouldn't be of any concern if you are not a contributor to the source-code of the project, have done any changes you'd be interested in keeping. Also, note that this is only related to the binary source code, not the ~/.lightning system config that holds the keystore (config.toml, private keys and identity)."
  echo

  while read -rp "ü§ñ Should the installer proceed and reset the local source code? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      echo "ü¶ñ The update script terminated. It has to reset the local repository to be in synch with remote. Read the documentation reference if you'd like to learn how to do it manually if thats your preference."

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      git fetch origin "$defaultAlphaTestnetBranch"
      git reset --hard "origin/$defaultAlphaTestnetBranch"
      git clean -f

      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  printf "ü§ñ Git pulling from the %s source code repository located at %s\n" "$defaultName" "$defaultLightningPath"
  if ! git pull origin "$defaultAlphaTestnetBranch"; then
    echo "üëπ Oops! Failed to git pull, if you made changes in the repository, e.g. edit files or added files in $defaultLightningPath, make sure you stage or reset them to let the automated process to work for you. Otherwise, check the document to do learn how to update manually https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"

    exit 1
  fi

  printf "ü§ñ Build and install the %s CLI\n" "$defaultName"
  if ! cargo +stable install --locked --path core/cli; then
    printf "üëπ Oops! Failed to build and install the %s CLI. If you are experiencing issues, help us improve by letting us know in our Discord %s\n" "$defaultName" "$defaultDiscordUrl"

    exit 1
  fi

  if [[ -L "/usr/local/bin/$defaultCLIAlias" ]]; then
    if ! sudo rm -f "/usr/local/bin/$defaultCLIAlias"; then
      printf "üëπ Oops! Failed to remove simbolic link %s \n" "/usr/local/bin/$defaultCLIAlias"
    fi
  fi

  if [[ -f "$HOME/.cargo/bin/$defaultName" ]]; then
    if ! sudo ln -s "$HOME/.cargo/bin/$defaultName" /usr/local/bin/$defaultCLIAlias; then
      printf "üëπ Oops! Failed to symlink %s to /usr/local/bin/%s\n" "$HOME/.cargo/bin/$defaultName" "$defaultName"
      echo
      read -rp "üòÖ After the installation, if $defaultName CLI command is not available globally, then you need to add $HOME/.cargo/bin/lightning to your system PATH or symlink the binary to /usr/local/bin/$defaultName, as we've failed to do it. Press ENTER to continue..."
    fi
  fi

  echo "üöë Verify $defaultLightningConfigPath..."
  grep -oE '/home\/(\w+)' "$defaultLightningConfigPath" | cut -d / -f 3 | while IFS= read -r username; do
    if [[ "$username" != $(whoami) ]] && grep -q "/home/$username" "$defaultLightningConfigPath"; then
      echo "‚ö†Ô∏è WARNING: The configuration contains a path for user /home/$username that doesn't match current user /home/$(whoami). If there isn't a reason for this mismatch, update the file manually."
    fi
  done

  if grep -q "~\/.$defaultName" "$defaultLightningConfigPath" || ! grep -q "$HOME" "$defaultLightningConfigPath"; then
    echo "ü§ñ Update the config.toml with user home path..."
    if ! sed -i "s|~/.$defaultName|/home/$(whoami)/.$defaultName|g" "$defaultLightningConfigPath"; then
      printf "üëπ Oops! Failed to replace the user home paths in the configuration file %s. Check the documentation to do it manually %s\n" "$defaultLightningConfigPath" "https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
    else
      printf "‚úÖ Replaced the user home path in the configuration file\n"
    fi
  else
      printf "‚úÖ Found user home path in the configuration file\n"
  fi

  echo "ü§ñ Update the systemd $defaultName.service"

  if ! grep -q "Environment=$defaultTempLogFilePath" "$defaultLightningSystemdServicePath"; then
    echo "ü§ñ The TMPDIR environment variable doesn't seem correct"

    if ! sudo sed -i -e '/StandardError=/a\' -e "Environment=$defaultTempLogFilePath" "$defaultLightningSystemdServicePath"; then
      echo "üëπ Oops! Failed setup the environment variable for TMPDIR where the syslog for Lightning CLI should be stored. Check the documentation to do it manually  https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
    fi
  else
    echo "‚úÖ The TMPDIR environment variable seems correct"
  fi

  if ! sudo sed -i "s|^ExecStart=.*|ExecStart=$defaultCLIAlias -c $defaultLightningConfigPath run|g" "$defaultLightningSystemdServicePath"; then
    echo "üëπ Oops! Failed to find and replace the property name ExecStart in $defaultLightningSystemdServicePath. You're advised to check our reference document to help troubleshoot https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"

    exit 1
  else
    echo "‚úÖ Updated the systemd $defaultName.service unit file"
    echo "ü§ñ Should reload the systemctl daemon..."

    if ! sudo systemctl daemon-reload; then
      printf "üëπ Oops! Failed to reload the systemctl daemon for some reason\n"
    fi
  fi

  if ! sudo rm -rf "$defaultLightningBasePath/data"; then
    echo "üëπ Oops! Failed to clear the path $defaultLightningBasePath/data for some reason. Check the documentation in https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code"
  fi

  echo "üìí Clear logs"
  for file in "$defaultLightningDiagnosticLogAbsPath" "$defaultLightningOutputLogAbsPath"; do
    if [[ -f "$file" ]] && ! sudo rm "$file"; then
      echo "üëπ Oops! Failed to remove $file"
    fi
  done

  echo "üåà The update has now completed."
  echo
  echo "ü§ñ Restart the Network Node by running the restart command:"
  echo "sudo systemctl restart $defaultName"
  echo
  echo "üëÄ You can watch the Node output by running the command:"
  echo "tail -f $defaultLightningOutputLogAbsPath"
  echo
  echo "ü•º For diagnostics run the command:"
  echo "tail -f $defaultLightningDiagnosticLogAbsPath"
  echo
  echo "Learn more by checking our guides at https://docs.fleek.network"
  echo "‚ú® That's all!"
)
