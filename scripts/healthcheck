#!/bin/bash

# Defaults
defaultName="lightning"
defaultCLIBuildName="$defaultName-node"
defaultCLIAlias="lgtn"
defaultAlphaTestnetBranch="testnet-alpha-1"
defaultLightningPath="$HOME/fleek-network/$defaultName"
defaultDiscordUrl="https://discord.gg/fleekxyz"
defaultLightningDiagnosticFilename="diagnostic.log"
defaultLightningOutputFilename="output.log"
defaultLightningLogPath="/var/log/$defaultName"
defaultLightningDiagnosticLogAbsPath="$defaultLightningLogPath/$defaultLightningDiagnosticFilename"
defaultLightningOutputLogAbsPath="$defaultLightningLogPath/$defaultLightningOutputFilename"
defaultTargetName="release"
defaultLightningSystemdServiceName="$defaultName"
defaultLightningSystemdServiceNameForDocker="docker-$defaultName"
defaultLightningSystemdServicePath="/etc/systemd/system/$defaultLightningSystemdServiceName.service"
defaultLightningSystemdServicePathForDocker="/etc/systemd/system/$defaultLightningSystemdServiceNameForDocker.service"
defaultLightningBasePath="$HOME/.$defaultName"
defaultLightningConfigFilename="config.toml"
defaultLightningConfigPath="$defaultLightningBasePath/$defaultLightningConfigFilename"
defaultTempLogFilePath="/var/tmp"

## State
basePath="/home/$(whoami)"
configIssueCount=0
healthIssueCount=0
warningCount=0

# Utils
findHintInstallPath() {
  getent passwd | while IFS=: read -r name password uid gid gecos home shell; do
    if [[ -d "/home/$name/fleek-network/$defaultName" ]]; then
      echo "‚ö†Ô∏è WARNING: Found the repository installed under username $name and path /home/$name/fleek-network/$defaultName. You should probably switch to user $name"
    fi
  done
}

# Log
successLog=""
warningLog=""
healthIssueLog=""

(
  exec < /dev/tty;

  if [[ "$EUID" -eq 0 ]]; then
    echo "‚ö†Ô∏è WARNING: You're running the health check as ROOT user. If you have installed the Fleek Network Lightning CLI as ROOT this is not recommended. Read our documentation in https://docs.fleek.network"

    basePath="/root"
  fi

  echo

  while read -rp "ü§ñ Are you logged with the user account used to install the Fleek Network Lightning CLI? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      printf "üëπ Oops! You should be logged in with the user account used to install the fleek Network Lightning CLI, switch the account and try again!\n"

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  echo

  while read -rp "ü§ñ This process might require to clear the logs and restart the service. Is it ok to clear the logs and restart the service? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      echo "üëπ Oops! The healthcheck verification was exited."
      
      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      break;
    fi

    printf "üí© Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  echo

  if [[ ! -f "$defaultLightningSystemdServicePathForDocker" ]]; then
    if [[ ! -d "$basePath/fleek-network/$defaultName" ]]; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: The Fleek Network Lightning CLI source code wasn't found in $basePath/fleek-network/$defaultName. If you have installed the service with the username $(whoami) and haven't customised the path, the source code is not in the expected location"

      findHintInstallPath

      ((warningCount++))
    else
      successLog+=$'\n'"‚úÖ Found source code in $basePath/fleek-network/$defaultName"
    fi
  fi

  if [[ ! -d "$basePath/.$defaultName" ]]; then
    warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the Fleek Network configuration directory $basePath/.$defaultName"

    ((warningCount++))
  else
    successLog+=$'\n'"‚úÖ Found configuration directory in $basePath/.$defaultName"
  fi

  if [[ ! -f "$basePath/.$defaultName/$defaultLightningConfigFilename" ]]; then
    warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the Fleek Network configuration file $basePath/.$defaultName/$defaultLightningConfigFilename"

    ((warningCount++))
  else
    sucessLog+="‚úÖ Found configuration file in $basePath/.$defaultName/$defaultLightningConfigFilename"
  fi

  if [[ ! -L "/usr/local/bin/$defaultCLIAlias" ]]; then
    warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the Fleek Network Lightning symlink in /usr/local/bin/$defaultCLIAlias"

    ((warningCount++))
  else
    successLog+=$'\n'"‚úÖ Found symlink /usr/local/bin/$defaultCLIAlias"
  fi

  if [[ ! -f "$defaultLightningSystemdServicePathForDocker" ]]; then
    if [[ ! -f "$defaultLightningSystemdServicePath" ]]; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the Fleek Network Systemd unit service unit file in $defaultLightningSystemdServicePath"

      ((warningCount++))
    else
      successLog+=$'\n'"‚úÖ Found the Systemd unit service $defaultLightningSystemdServicePath"

      if ! grep 'ExecStart' "$defaultLightningSystemdServicePath" | grep -q "\-c $basePath/.$defaultName/config.toml"; then
        warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the flag -c and config path in $defaultLightningSystemdServicePath"

      ((warningCount++))
      else
        successLog+=$'\n'"‚úÖ Found the flag -c with config path in $defaultLightningSystemdServicePath"
      fi
    fi
  else
    if [[ ! -f "$defaultLightningSystemdServicePathForDocker" ]]; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: Missing the Fleek Network Systemd unit service unit file in $defaultLightningSystemdServicePathForDocker"
    else
      successLog+=$'\n'"‚úÖ Found the Systemd unit service $defaultLightningSystemdServicePathForDocker"
    fi
  fi

  if [[ -f "$defaultLightningSystemdServicePath" && -f "$defaultLightningSystemdServicePathForDocker" ]]; then
    warningLog+=$'\n'"‚ö†Ô∏è WARNING: Found conflicting Systemd setup, as Native and Docker Systemd are present. If you are using the get.fleek.network tools, the automation might make wrong conclusions about your preferred way of running the node. To avoid confusion you should opt for a single method to run a node, either natively or docker."
    echo
  fi

  homeUsernamePaths=$(grep -oE '/home\/([a-zA-Z0-9_\-]+)' "$defaultLightningConfigPath" | cut -d / -f 3)
  for username in $homeUsernamePaths; do
    if [[ "$username" != $(whoami) ]] && grep -q "/home/$username" "$defaultLightningConfigPath"; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: The configuration contains a path for user /home/$username that doesn't match current user's home $basePath. If there isn't a reason for this mismatch, update the file manually."

      ((warningCount++))
      ((configIssueCount++))
    fi
  done
  
  if [[ "$configIssueCount" -eq 0 ]]; then
    successLog+=$'\n'"‚úÖ Verified the $defaultLightningConfigPath"
  else
    echo "üêõ Found some possible issues in the $defaultLightningConfigPath"
  fi

  if [[ -f "$defaultLightningSystemdServicePath" || -f  "$defaultLightningSystemdServicePathForDocker" ]]; then
    sudo rm -f "$defaultLightningOutputLogAbsPath"
    sudo rm -f "$defaultLightningDiagnosticLogAbsPath"
  
    echo "ü§ñ The Systemd service will restart, be patient..."
    
    if [[ -f "$defaultLightningSystemdServicePathForDocker" ]]; then
      if ! sudo systemctl restart "$defaultLightningSystemdServiceNameForDocker"; then
        echo "üëπ Oops! Failed to restart the Docker Container for some reason..."
      fi

      # This is intentional to allow Docker service to launch
      # TODO: Replace with while loop and docker inspect checkup
      sleep 5
    else
      sudo systemctl restart "$defaultName"
    fi

    serverOutputWaitAttempts=0
    while [[ -f "$defaultLightningOutputLogAbsPath" && ! -s "$defaultLightningOutputLogAbsPath" ]]; do
      sleep 1

      if [[ "$serverOutputWaitAttempts" -gt 10 ]]; then
        warningLog+=$'\n'"‚ö†Ô∏è WARNING: The Node failed to provide log information, the script will not be able to analyze the log for you. If you'd like to learn how to analyze the logs manually check https://docs.fleek.network/docs/node/analyzing-logs"

        break
      fi

      ((serverOutputWaitAttempts++))
    done

    if tail -n 500 "$defaultLightningOutputLogAbsPath" | grep -iq "Node is not staked"; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: The node is not staked. Have you read the instructions to get onboarded? Find it here https://docs.fleek.network/docs/node/testnet-onboarding"
      echo

      ((warningCount++))
      ((healthIssueCount++))
    fi
    
    if tail -n 500 "$defaultLightningOutputLogAbsPath" | grep -iq "Please update your node"; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: Binary process version mismatch, you have to update your node. A quick reference is available in https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code/"
      echo

      ((warningCount++))
      ((healthIssueCount++))
    fi

    if tail -n 500 "$defaultLightningDiagnosticLogAbsPath" | grep -iq "Node secret key does not exist"; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: The Node Key wasn't found, this might be due to missing keystore or user delegation permissions (sudo). A quick reference to help troubleshoout is available in https://docs.fleek.network/references/Lightning%20CLI/keys-not-found/"
      echo

      ((warningCount++))
      ((healthIssueCount++))
    fi
    
    if ! curl -s -w "\n" localhost:4230/health | grep -iq 'running and staked'; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: Failed to get a response from localhost:4230/health. The node seems to be offline (not running), if you are participating in testnet, then read the instructions in https://docs.fleek.network/docs/node/testnet-onboarding, to run successfully!"

      ((warningCount++))
      ((healthIssueCount++))
    else
      successLog+=$'\n'"‚úÖ The localhost:4230/health is okay"
    fi
  else
    warningLog+=$'\n'"‚ö†Ô∏è WARNING: Your setup seems to be custom, e.g. running quickly with Docker or Lightning CLI, in any of this cases without Systemd service wrapper, etc. Be aware the tools provided via get.fleek.network are meant for recommeded setups via docs or tools."
    echo

    if ! curl -s -w "\n" localhost:4230/health | grep -iq 'running and staked'; then
      warningLog+=$'\n'"‚ö†Ô∏è WARNING: Failed to get a response from localhost:4230/health. The node seems to be offline (not running), if you are participating in testnet, then read the instructions in https://docs.fleek.network/docs/node/testnet-onboarding, to run successfully!"

      ((warningCount++))
      ((healthIssueCount++))
    else
      successLog+=$'\n'"‚úÖ The localhost:4230/health is okay"
    fi
  fi

  echo "$warningLog"
  echo "$successLog"

  echo
  echo
  echo "==== Summary ===="
  echo
  echo "‚ö†Ô∏è Found $warningCount warnings"
  echo "üöë Found $healthIssueCount node status issue"
  echo

  if [[ "$warningCount" -eq "0" && "$healthIssueCount" -eq "0" ]]; then
    echo "üåà The Node is running correctly, no issues found!"
  fi

  echo
  echo "================="
  echo
  echo "The health check has now completed, see the result above."
  echo
  echo "To learn more about Fleek Network check our documentation at https://docs.fleek.network"
  echo
  echo "‚ú® That's all!"
)