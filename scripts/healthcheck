#!/bin/bash

# Defaults
defaultName="lightning"
defaultCLIBuildName="$defaultName-node"
defaultCLIAlias="lgtn"
defaultAlphaTestnetBranch="testnet-alpha-0"
defaultLightningPath="$HOME/fleek-network/$defaultName"
defaultDiscordUrl="https://discord.gg/fleekxyz"
defaultLightningDiagnosticFilename="diagnostic.log"
defaultLightningOutputFilename="output.log"
defaultLightningLogPath="/var/log/$defaultName"
defaultLightningDiagnosticLogAbsPath="$defaultLightningLogPath/$defaultLightningDiagnosticFilename"
defaultLightningOutputLogAbsPath="$defaultLightningLogPath/$defaultLightningOutputFilename"
defaultTargetName="release"
defaultLightningSystemdServiceName="$defaultName"
defaultLightningSystemdServiceNameForDocker="docker-$defaultName"
defaultLightningSystemdServicePath="/etc/systemd/system/$defaultLightningSystemdServiceName.service"
defaultLightningSystemdServicePathForDocker="/etc/systemd/system/$defaultLightningSystemdServiceNameForDocker.service"
defaultLightningBasePath="$HOME/.$defaultName"
defaultLightningConfigFilename="config.toml"
defaultLightningConfigPath="$defaultLightningBasePath/$defaultLightningConfigFilename"
defaultTempLogFilePath="/var/tmp"

## State
basePath="/home/$(whoami)"
configIssueCount=0
healthIssueCount=0
warningCount=0

(
  exec < /dev/tty;

  if [[ "$EUID" -eq 0 ]]; then
    echo "⚠️ WARNING: You're running the health check as ROOT user. If you have installed the Fleek Network Lightning CLI as ROOT this is not recommended. Read our documentation in https://docs.fleek.network"

    basePath="/root"
  fi

  echo

  while read -rp "🤖 Are you logged with the user account used to install the Fleek Network Lightning CLI? (yes/no) " answer; do
    if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
      printf "👹 Oops! You should be logged in with the user account used to install the fleek Network Lightning CLI, switch the account and try again!\n"

      exit 1
    elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
      break;
    fi

    printf "💩 Uh-oh! We expect a yes or no answer. Try again...\n"
  done

  echo

  if [[ ! -d "$basePath/fleek-network/$defaultName" ]]; then
    echo "⚠️ WARNING: The Fleek Network Lightning CLI source code wasn't found in $basePath/fleek-network/$defaultName. If you have installed the service with the username $(whoami) and haven't customised the path, the source code is not in the expected location"

    ((warningCount++))
  else
    echo "✅ Found source code in $basePath/fleek-network/$defaultName"
  fi

  if [[ ! -d "$basePath/.$defaultName" ]]; then
    echo "⚠️ WARNING: Missing the Fleek Network configuration directory $basePath/.$defaultName"

    ((warningCount++))
  else
    echo "✅ Found configuration directory in $basePath/.$defaultName"
  fi

  if [[ ! -f "$basePath/.$defaultName/$defaultLightningConfigFilename" ]]; then
    echo "⚠️ WARNING: Missing the Fleek Network configuration file $basePath/.$defaultName/$defaultLightningConfigFilename"

    ((warningCount++))
  else
    echo "✅ Found configuration file in $basePath/.$defaultName/$defaultLightningConfigFilename"
  fi

  if [[ ! -L "/usr/local/bin/$defaultCLIAlias" ]]; then
    echo "⚠️ WARNING: Missing the Fleek Network Lightning symlink in /usr/local/bin/$defaultCLIAlias"

    ((warningCount++))
  else
    echo "✅ Found symlink /usr/local/bin/$defaultCLIAlias"
  fi

  if [[ ! -f "$defaultLightningSystemdServicePath" ]]; then
    echo "⚠️ WARNING: Missing the Fleek Network Systemd unit service unit file in $defaultLightningSystemdServicePath"

    ((warningCount++))
  else
    echo "✅ Found the Systemd unit service $defaultLightningSystemdServicePath"

    if ! grep 'ExecStart' "$defaultLightningSystemdServicePath" | grep -q "\-c $basePath/.$defaultName/config.toml"; then
      echo "⚠️ WARNING: Missing the flag -c and config path in $defaultLightningSystemdServicePath"

    ((warningCount++))
    else
      echo "✅ Found the flag -c with config path in $defaultLightningSystemdServicePath"
    fi
  fi

  if [[ -f "$defaultLightningSystemdServicePath" && -f "$defaultLightningSystemdServicePathForDocker" ]]; then
    echo "⚠️ WARNING: Found conflicting Systemd setup, as Native and Docker Systemd are present. If you are using the get.fleek.network tools, the automation might make wrong conclusions about your preferred way of running the node. To avoid confusion you should opt for a single method to run a node, either natively or docker."
    echo
  fi

  homeUsernamePaths=$(grep -oE '/home\/(\w+)' "$defaultLightningConfigPath" | cut -d / -f 3)
  for username in $homeUsernamePaths; do
    if [[ "$username" != $(whoami) ]] && grep -q "/home/$username" "$defaultLightningConfigPath"; then
      echo "⚠️ WARNING: The configuration contains a path for user /home/$username that doesn't match current user $basePath. If there isn't a reason for this mismatch, update the file manually."

      ((warningCount++))
      ((configIssueCount++))
    fi
  done
  
  if [[ "$configIssueCount" -eq 0 ]]; then
    echo "✅ Verified the $defaultLightningConfigPath"
  else
    echo "🐛 Found some possible issues in the $defaultLightningConfigPath"
  fi

  if ! curl -s -w "\p" localhost:4230/health | grep -iq 'OK'; then
    echo "⚠️ WARNING: Failed to get a response from localhost:4230/health. The node is not running, if you are participating in testnet, then read the instructions in https://docs.fleek.network/docs/node/testnet-onboarding, to run successfully!"

    ((warningCount++))
    ((healthIssueCount++))
  else
    echo "✅ The localhost:4230/health is okay"
  fi

  if [[ -f "$defaultLightningSystemdServicePath" ]]; then
    while read -rp "🤖 This process requires to clear the logs and restart the service. Should it clear the logs and restart the service? (yes/no) " answer; do
      if [[ "$answer" == [nN] || "$answer" == [nN][oO] ]]; then
        echo "👹 Oops! The healthcheck verification was exited."
        
        exit 1
      elif [[ "$answer" == [yY] || "$answer" == [yY][eE][sS] ]]; then
        sudo rm "$defaultLightningOutputLogAbsPath"
        sudo rm "$defaultLightningDiagnosticLogAbsPath"

        if [[ -f "$defaultLightningSystemdServicePathForDocker" ]]; then
          sudo systemctl restart "$defaultLightningSystemdServiceNameForDocker"
        else
          sudo systemctl restart "$defaultName"
        fi

        serverOutputWaitAttempts=0
        while [[ -f "$defaultLightningOutputLogAbsPath" && ! -s "$defaultLightningOutputLogAbsPath" ]]; do
          echo "🤖 Please wait for the service output logs..."
          sleep 5

          if [[ "$serverOutputWaitAttempts" -gt 10 ]]; then
            break
          fi

          ((serverOutputWaitAttempts++))
        done

        if tail -n 500 "$defaultLightningOutputLogAbsPath" | grep -iq "Node is not staked"; then
          echo "⚠️ WARNING: The node is not staked. Have you read the instructions to get onboarded? Find it here https://docs.fleek.network/docs/node/testnet-onboarding"
          echo

          ((warningCount++))
          ((healthIssueCount++))

          break;
        fi
        
        if tail -n 500 "$defaultLightningOutputLogAbsPath" | grep -iq "Please update your node"; then
          echo "⚠️ WARNING: Binary process version mismatch, you have to update your node. A quick reference is available in https://docs.fleek.network/references/Lightning%20CLI/update-cli-from-source-code/"
          echo

          ((warningCount++))
          ((healthIssueCount++))

          break;
        fi

        if tail -n 500 "$defaultLightningDiagnosticLogAbsPath" | grep -iq "Node secret key does not exist"; then
          echo "⚠️ WARNING: The Node Key wasn't found, this might be due to missing keystore or user delegation permissions (sudo). A quick reference to help troubleshoout is available in https://docs.fleek.network/references/Lightning%20CLI/keys-not-found/"
          echo

          ((warningCount++))
          ((healthIssueCount++))

          break;
        fi
      fi

      printf "💩 Uh-oh! We expect a yes or no answer. Try again...\n"
    done
  fi

  echo
  echo
  echo "==== Summary ===="
  echo
  echo "⚠️ Found $warningCount warnings"
  echo "🚑 Found $healthIssueCount node status issue"
  echo
  echo "================="
  echo
  echo "The health check has now completed, see the result above."
  echo
  echo "To learn more about Fleek Network check our documentation at https://docs.fleek.network"
  echo
  echo "✨ That's all!"
)