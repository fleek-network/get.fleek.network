#!/bin/bash

# The white space before and after is intentional
cat << "ART"

  ⭐️ Fleek Network ⭐️

              zeeeeee-
              z$$$$$$"
            d$$$$$$"
            d$$$$$P
          d$$$$$P
          $$$$$$"
        .$$$$$$"
      .$$$$$$"
      4$$$$$$$$$$$$$"
    z$$$$$$$$$$$$$"
    """""""3$$$$$"
          z$$$$P
          d$$$$"
        .$$$$$"
      z$$$$$"
      z$$$$P
    d$$$$$$$$$$"
    *******$$$"
        .$$$"
        .$$"
      4$P"
      z$"
    zP
    z"
  /

ART

echo
echo "★★★★★★★★★ 🌍 Website https://fleek.network"
echo "★★★★★★★★★ 📚 Documentation https://docs.fleek.network"
echo "★★★★★★★★★ 💾 Git repository https://github.com/fleek-network/lightning"
echo "★★★★★★★★★ 🤖 Discord https://discord.gg/fleek"
echo "★★★★★★★★★ 🐤 Twitter https://twitter.com/fleek_net"
echo "★★★★★★★★★ 🎨 Ascii art by https://www.asciiart.eu"
echo

echo "In order to shutdown gracefully, the process conducts a check to determine when it's more appropriate to shutdown the node."
echo "This helps ensure that node reputations are not penalized, e.g. when actively participating in the network and shutting down prematurely."
echo
echo "Thus, for nodes that are actively participating, an opt-out transaction puts the node offline and only shutdown after the epoch ends."
echo "On the other hand, a non-participating node (that is offline in the timely epoch) can be shut down immediately."
echo
echo "To summarize, this tool automates the shutdown process gracefully for the node operator, who would otherwise have to do it manually."
echo

read -rp "Press ENTER process continue..."

echo

spin() {
  sp='/-\|'
  printf ' '
  while sleep 1; do
    printf '\b%.1s' "$sp"
    sp=${sp#?}${sp%???}
  done
}

lgtn opt status &> /dev/null || statusExitCode=$?

statusExitCode="${statusExitCode:-0}"

if [[ "$statusExitCode" -eq 0 ]]; then
  echo "The node is participating in the network (online) and we'll now opt-out..."

  if ! yes | lgtn opt out &> /dev/null; then
    echo "👹 Oops! It Failed to opt-out for some reason. Note that the opt-out command is required before shutting down the node to avoid reputation penalties."
  fi
elif [[ "$statusExitCode" -eq 210 ]]; then
  echo "The node is not participating in the network (offline)"

  # TODO: Can shutdown immediately
  if sudo systemctl status lightning &> /dev/null; then
    if ! sudo systemctl stop lightning; then
      echo "Oops! Failed to stop the Lightning Service for some reason. Try to sudo systemctl stop lightning"

      exit 1
    fi

    exit 0
  else
    echo "The Lightning Service is shutdown and the Lightning Service is off 👍"

    exit 0
  fi
elif [[ "$statusExitCode" -eq 211 ]]; then
  echo "The node has opted-in and would be participating once the next epoch starts."
  echo "We'll now make the transaction request to opt-out..."
  
  if ! yes | lgtn opt out &> /dev/null; then
    echo "👹 Oops! It Failed to opt-out for some reason. Note that the opt-out command is required before shutting down the node to avoid reputation penalties."

    exit 1
  fi

  echo "We'll now wait until the current epoch ends for the node network participation state to go offline..."
elif [[ "$statusExitCode" -eq 212 ]]; then
  echo "The node has opted-out and we'll shutdown the node once the current epoch ends..."
fi

# TODO: add check Epoch number diff in comparison from runtime

spin & spinpid=$!

while true; do
  sleep 3
   
  lgtn opt status &> /dev/null || statusExitCode=$?

  if [[ "$statusExitCode" -eq 210 ]]; then    
    break;
  fi
done

kill "$spinpid"

echo
echo "🤖 The node network participation state is now offline (opted-out) and can now be shutdown safely..."

if ! sudo systemctl stop lightning; then
  echo "👹 Oops! Failed to stop the Lightning Service for some reason. You're advised to try manually by executing the command: sudo systemctl stop lightning"

  exit 1
fi

echo "The Lightning Service has shutdown 👍"
